=== Comparación sin preprocesar (texto llano) ===
Porcentaje de similitud: 92.59%

Fragmentos similares:
- def range_sum(l, r, origin):
- l -= origin
- r -= origin
- if l <= 0 and r <= 0:
- l, r = -r, -l
- elif not (l >= 0 and r >= 0):
- return range_sum(0, abs(l), 0) + range_sum(0, abs(r), 0)
- return (r*(r+1)//2) - (l*(l-1)//2)
- r, g, b = map(int, input().split())
- ans = 10000000000000
- calc = 0
- #R
- if -100 + (r-1)//2 >= l:
- calc += range_sum(l-r, l-1, -100)
- else:
- calc += range_sum(-(r//2),(r-1)//2, 0)
- #G
- calc += range_sum(l, l+g-1, 0)
- #B
- if l+g - 1 >= 100 - (b-1)//2:
- calc += range_sum(l+g, l+g+b-1, 100)
- else:
- calc += range_sum(-(b//2),(b-1)//2, 0)
- ans = min(ans, calc)
- print(ans)


=== Comparación con preprocesamiento por tokens ===
Porcentaje de similitud: 100.00%

Fragmentos similares:
- KEYWORD(def) ID_1 ( ID_2 , ID_3 , ID_4 ) :
  ---> Archivo1: def range_sum(l, r, origin):
  ---> Archivo2: def range_sum(l, r, origin):
- ID_2 -= ID_4
  ---> Archivo1: l -= origin
  ---> Archivo2: l -= origin
- ID_3 -= ID_4
  ---> Archivo1: r -= origin
  ---> Archivo2: r -= origin
- KEYWORD(if) ID_2 <= NUMBER KEYWORD(and) ID_3 <= NUMBER :
  ---> Archivo1: if l <= 0 and r <= 0:
  ---> Archivo2: if l <= 0 and r <= 0:
- ID_2 , ID_3 = - ID_3 , - ID_2
  ---> Archivo1: l, r = -r, -l
  ---> Archivo2: l, r = -r, -l
- KEYWORD(elif) KEYWORD(not) ( ID_2 >= NUMBER KEYWORD(and) ID_3 >= NUMBER ) :
  ---> Archivo1: elif not (l >= 0 and r >= 0):
  ---> Archivo2: elif not (l >= 0 and r >= 0):
- KEYWORD(return) ID_1 ( NUMBER , BUILTIN(abs) ( ID_2 ) , NUMBER ) + ID_1 ( NUMBER , BUILTIN(abs) ( ID_3 ) , NUMBER )
  ---> Archivo1: return range_sum(0, abs(l), 0) + range_sum(0, abs(r), 0)
  ---> Archivo2: return range_sum(0, abs(l), 0) + range_sum(0, abs(r), 0)
- KEYWORD(return) ( ID_3 * ( ID_3 + NUMBER ) // NUMBER ) - ( ID_2 * ( ID_2 - NUMBER ) // NUMBER )
  ---> Archivo1: return (r*(r+1)//2) - (l*(l-1)//2)
  ---> Archivo2: return (r*(r+1)//2) - (l*(l-1)//2)
- ID_3 , ID_5 , ID_6 = ID_7 ( BUILTIN(int) , BUILTIN(input) ( ) . ID_8 ( ) )
  ---> Archivo1: r, g, b = map(int, input().split())
  ---> Archivo2: r, g, b = map(int, input().split())
- ID_9 = NUMBER
  ---> Archivo1: ans = 10000000000000
  ---> Archivo2: ans = 10000000000000
- KEYWORD(for) ID_10 KEYWORD(in) BUILTIN(range) ( NUMBER * NUMBER + NUMBER ) :
  ---> Archivo1: for i in range(600*2+1):
  ---> Archivo2: for i in range(450*2+1):
- ID_2 = ID_10 - NUMBER
  ---> Archivo1: l = i - 600
  ---> Archivo2: l = i - 450
- ID_11 = NUMBER
  ---> Archivo1: calc = 0
  ---> Archivo2: calc = 0
- KEYWORD(if) - NUMBER + ( ID_3 - NUMBER ) // NUMBER >= ID_2 :
  ---> Archivo1: #R
  ---> Archivo2: #R
- ID_11 += ID_1 ( ID_2 - ID_3 , ID_2 - NUMBER , - NUMBER )
  ---> Archivo1: if -100 + (r-1)//2 >= l:
  ---> Archivo2: if -100 + (r-1)//2 >= l:
- KEYWORD(else) :
  ---> Archivo1: calc += range_sum(l-r, l-1, -100)
  ---> Archivo2: calc += range_sum(l-r, l-1, -100)
- KEYWORD(else) :
  ---> Archivo1: calc += range_sum(l-r, l-1, -100)
  ---> Archivo2: #B
- ID_11 += ID_1 ( - ( ID_3 // NUMBER ) , ( ID_3 - NUMBER ) // NUMBER , NUMBER )
  ---> Archivo1: else:
  ---> Archivo2: else:
- ID_11 += ID_1 ( ID_2 , ID_2 + ID_5 - NUMBER , NUMBER )
  ---> Archivo1: calc += range_sum(-(r//2),(r-1)//2, 0)
  ---> Archivo2: calc += range_sum(-(r//2),(r-1)//2, 0)
- KEYWORD(if) ID_2 + ID_5 - NUMBER >= NUMBER - ( ID_6 - NUMBER ) // NUMBER :
  ---> Archivo1: #G
  ---> Archivo2: #G
- ID_11 += ID_1 ( ID_2 + ID_5 , ID_2 + ID_5 + ID_6 - NUMBER , NUMBER )
  ---> Archivo1: calc += range_sum(l, l+g-1, 0)
  ---> Archivo2: calc += range_sum(l, l+g-1, 0)
- KEYWORD(else) :
  ---> Archivo1: #B
  ---> Archivo2: calc += range_sum(l-r, l-1, -100)
- KEYWORD(else) :
  ---> Archivo1: #B
  ---> Archivo2: #B
- ID_11 += ID_1 ( - ( ID_6 // NUMBER ) , ( ID_6 - NUMBER ) // NUMBER , NUMBER )
  ---> Archivo1: if l+g - 1 >= 100 - (b-1)//2:
  ---> Archivo2: if l+g - 1 >= 100 - (b-1)//2:
- ID_9 = BUILTIN(min) ( ID_9 , ID_11 )
  ---> Archivo1: calc += range_sum(l+g, l+g+b-1, 100)
  ---> Archivo2: calc += range_sum(l+g, l+g+b-1, 100)
- BUILTIN(print) ( ID_9 )
  ---> Archivo1: else:
  ---> Archivo2: else:
